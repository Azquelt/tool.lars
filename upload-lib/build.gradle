/*******************************************************************************
* Copyright (c) 2015 IBM Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral();
}

dependencies {
    compile project(':client-lib')
    testCompile group:'junit', name:'junit', version:'4.+'
    testCompile project(':test-utils')
}

Map<String, List<String>> javaVersionEsas = [
    'requires_java6.esa': ['requires_java6_bundle.jar'],
    'requires_java7.esa': ['requires_java7_bundle.jar'],
    'requires_java7_exact.esa': ['requires_java7_exact_bundle.jar'],
    'requires_incompatible_versions.esa': ['requires_java7_exact_bundle.jar',
                                         'requires_java8_bundle.jar'],
    'requires_multiple_versions.esa': ['requires_java6_bundle.jar',
                                     'requires_java7_bundle.jar'],
    'requires_bad_java_version.esa':['requires_bad_java_version_bundle.jar']
]

javaVersionEsas.each({target, bundles ->
    Task task = task "create--${target}" (type:Zip) {
        archiveName = target
        destinationDir = file('build/test-working/resources')
        bundles.each({
            from file("build/test-working/resources/${it}")
            dependsOn "create--${it}"
        })
        from (file('src/fat/testResources/javaVersionTests/SUBSYSTEM.MF')) {
            into('OSGI-INF')
        }
    }
    prepareTestResources.dependsOn task
    prepareTestResources.outputs.files(task)
})


// vim: set si: